#!/bin/bash

#SBATCH -p compute
#SBATCH -J t_llam
#SBATCH --cpus-per-task=4
#SBATCH --mem=200000
#SBATCH --nodelist=g128
#SBATCH -t 8:00:00
#SBATCH --gres=gpu:a100:4

# Load CUDA module first
module load cuda/12.5

# 1) Initialize Conda in this shell environment
eval "$(/home/ivieira/mambaforge/bin/conda shell.bash hook)"

# 2) Activate the Conda environment (only once)
conda activate my-pip-env

# 3) Move to your project directory
cd ~/chicago2/HP_FT_TM

# 4) Set CUDA visible devices from SLURM
export CUDA_VISIBLE_DEVICES=$SLURM_STEP_GPUS

# 5) Verify CUDA is available
python -c "import torch; print('CUDA available:', torch.cuda.is_available()); print('Device count:', torch.cuda.device_count()); print('Devices:', [torch.cuda.get_device_name(i) for i in range(torch.cuda.device_count())])"

# 5) Ensure pip is up-to-date
python -m pip install --upgrade pip -q

# First, completely remove bitsandbytes
python -m pip uninstall -y bitsandbytes

# Then install the latest version directly from the source
python -m pip install --user --no-cache-dir --upgrade \
    "bitsandbytes @ git+https://github.com/TimDettmers/bitsandbytes.git" \
    torch \
    ctranslate2==4.3.1 \
    "transformers>=4.38.0" \
    "trl>=0.7.6" \
    huggingface_hub \
    accelerate \
    sentencepiece \
    sacrebleu \
    pandas \
    comet \
    unbabel-comet \
    polars \
    mlflow \
    peft \
    datasets \
    safetensors

# Verify the installation
python -c "
import bitsandbytes as bnb
print('bitsandbytes version:', bnb.__version__)
print('CUDA compilation status:', bnb.COMPILED_WITH_CUDA)
"

# Verify installations
python -c "import transformers; import trl; print(f'transformers version: {transformers.__version__}'); print(f'trl version: {trl.__version__}')"

# 7) Run the training script
python ~/chicago2/HP_FT_TM/BALS_trainer.py
